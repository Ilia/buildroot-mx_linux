From f39431a36cc81efe61304e0ad10e580c44f36b19 Mon Sep 17 00:00:00 2001
From: Ilia Mogilevsky <ilia@mogilevsky.com.au>
Date: Wed, 28 May 2014 19:54:24 +1000
Subject: [PATCH 1/3] Test audio fix

---
 xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
index b48a4fc..4ed03a7 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
@@ -293,6 +293,26 @@ bool CAESinkALSA::InitializeHW(const ALSAConfig &inconfig, ALSAConfig &outconfig
   snd_pcm_hw_params_set_access(m_pcm, hw_params, SND_PCM_ACCESS_RW_INTERLEAVED);
 
   unsigned int sampleRate   = inconfig.sampleRate;
+#if defined(HAS_LIBAMCODEC)
+  switch(sampleRate)
+  {
+    case 11025:
+    case 22050:
+    case 88200:
+    case 176400:
+      sampleRate = 44100;
+      break;
+    case 8000:
+    case 16000:
+    case 24000:
+    case 32000:
+    case 96000:
+    case 192000:
+    case 384000:
+      sampleRate = 48000;
+      break;
+  }
+#endif
   unsigned int channelCount = inconfig.channels;
   snd_pcm_hw_params_set_rate_near    (m_pcm, hw_params, &sampleRate, NULL);
   snd_pcm_hw_params_set_channels_near(m_pcm, hw_params, &channelCount);
@@ -1038,6 +1058,10 @@ void CAESinkALSA::EnumerateDevice(AEDeviceInfoList &list, const std::string &dev
       /* Make it "Default (whatever)" */
       info.m_displayName = "Default (" + info.m_displayName + (info.m_displayNameExtra.empty() ? "" : " " + info.m_displayNameExtra + ")");
       info.m_displayNameExtra = "";
+#if defined(HAS_LIBAMCODEC)
+      info.m_dataFormats.push_back(AE_FMT_AC3);
+      info.m_dataFormats.push_back(AE_FMT_DTS);
+#endif
     }
 
   }
-- 
1.8.5.2 (Apple Git-48)


From b39ba1ee50bf6435e4ea82af67a071bcb08d5419 Mon Sep 17 00:00:00 2001
From: Ilia Mogilevsky <ilia@mogilevsky.com.au>
Date: Sat, 31 May 2014 16:30:49 +1000
Subject: [PATCH 2/3] fixed music playback

---
 xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
index 4ed03a7..61ec219 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
@@ -77,6 +77,17 @@ static unsigned int ALSASampleRateList[] =
   0
 };
 
+static int CheckNP2(unsigned x)
+{
+    --x;
+    x |= x >> 1;
+    x |= x >> 2;
+    x |= x >> 4;
+    x |= x >> 8;
+    x |= x >> 16;
+    return ++x;
+}
+
 CAESinkALSA::CAESinkALSA() :
   m_bufferSize(0),
   m_formatSampleRateMul(0.0),
@@ -393,13 +404,14 @@ bool CAESinkALSA::InitializeHW(const ALSAConfig &inconfig, ALSAConfig &outconfig
    after those are fixed.
   */
   periodSize  = std::min(periodSize, (snd_pcm_uframes_t) sampleRate / 20);
-  bufferSize  = std::min(bufferSize, (snd_pcm_uframes_t) sampleRate / 5);
-  
+  bufferSize  = std::min(bufferSize, (snd_pcm_uframes_t) sampleRate / 4);
+  bufferSize  = CheckNP2(bufferSize);
   /* 
    According to upstream we should set buffer size first - so make sure it is always at least
    4x period size to not get underruns (some systems seem to have issues with only 2 periods)
   */
   periodSize = std::min(periodSize, bufferSize / 4);
+  periodSize  = CheckNP2(periodSize);
 
   CLog::Log(LOGDEBUG, "CAESinkALSA::InitializeHW - Request: periodSize %lu, bufferSize %lu", periodSize, bufferSize);
 
-- 
1.8.5.2 (Apple Git-48)


From 0c2854e69b14f6a964315de99ee321d13afb4721 Mon Sep 17 00:00:00 2001
From: Ilia Mogilevsky <ilia@mogilevsky.com.au>
Date: Sat, 31 May 2014 16:34:19 +1000
Subject: [PATCH 3/3] force passtru

---
 xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAESink.cpp | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAESink.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAESink.cpp
index 56b72d3..c196a6b 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAESink.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAESink.cpp
@@ -95,6 +95,7 @@ AEDeviceType CActiveAESink::GetDeviceType(const std::string &device)
 
 bool CActiveAESink::HasPassthroughDevice()
 {
+  return true;
   for (AESinkInfoList::iterator itt = m_sinkInfoList.begin(); itt != m_sinkInfoList.end(); ++itt)
   {
     for (AEDeviceInfoList::iterator itt2 = itt->m_deviceInfoList.begin(); itt2 != itt->m_deviceInfoList.end(); ++itt2)
@@ -109,6 +110,7 @@ bool CActiveAESink::HasPassthroughDevice()
 
 bool CActiveAESink::SupportsFormat(const std::string &device, AEDataFormat format, int samplerate)
 {
+  return true;
   std::string dev = device;
   std::string dri;
   CAESinkFactory::ParseDevice(dev, dri);
-- 
1.8.5.2 (Apple Git-48)

